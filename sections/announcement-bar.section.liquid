{% liquid
  assign countdowns = section.blocks | where: 'type', 'countdown'
  assign countdowns_size = countdowns.size
%}

{% render 'vite-tag' with '@modules/sections/announcement-bar' %}

{% assign components_length = section.blocks.size %}
{% assign component_index = 0 %}

{%- capture announcement_bar_content -%}
  {%- for block in section.blocks -%}
    {%- assign has_extra_content = false -%}

    {%- if block.settings.content != blank or block.settings.image != blank -%}
      {%- assign has_extra_content = true -%}
    {%- endif -%}
    {% assign empty_component = false %}

    {%- if block.type == 'countdown' -%}
      {%- assign today_date = 'now' | date: '%s' | minus: 0 -%}
      {%- assign countdown_end = block.settings.deadline | date: '%s' | minus: 0 -%}
      {%- if today_date > countdown_end and block.settings.hide_finished -%}
        {% assign empty_component = true %}
        {% assign components_length = components_length |  minus: 1 %}
        {% assign countdowns_size = countdowns_size |  minus: 1 %}
      {%- else -%}
          {% if block.settings.countdown_display == 'single_line' %}
              {% assign countdowns_size = countdowns_size |  minus: 1 %}
          {% endif %}

        {% assign empty_component = false %}
        {% capture countdown %}
          {% render 'countdown',
                  text_class: text_size_class,
                  main_class: 'annoucement_countdown',
                  top_title : block.settings.top_title,
                  bottom_title : block.settings.bottom_title,
                  deadline : block.settings.deadline,
                  end_message : block.settings.end_message,
                  one_line:true,
                  countdown_display: block.settings.countdown_display,
                  countdown_item_border: block.settings.countdown_item_border
          %}
        {% endcapture %}
      {%- endif -%}
    {%- endif -%}

    {% unless empty_component == true %}
        {% assign component_index = component_index | plus: 1 %}
      <announcement-bar-item
              {% unless component_index == 1 %}
                hidden
              {% endunless %}
              {% if has_extra_content %}
                has-content
              {% endif %}
              class="announcement-bar__item"
              {{ block.shopify_attributes }}
      >

        {%- case section.settings.announcement_text_size -%}
          {%- when 'small' -%}
            {%- assign text_size_class = 'text--xsmall' -%}
          {%- when 'normal' -%}
            {%- assign text_size_class = 'text--small' -%}
          {%- when 'large' -%}
            {%- assign text_size_class = '' -%}
        {%- endcase -%}

        {% capture main_message %}
          {% case block.type %}
            {% when 'countdown' %}
              {{ countdown }}
            {% when 'message_richtext' %}
              {{ block.settings.message_richtext }}
            {% when 'message' %}
              <div>
                {{ block.settings.text | escape }}
              </div>
              {% assign promocode = block.settings.announcement_promocode %}
              {% if promocode != blank %}
                  <div class="nl-promocode">
                      <div class="nl-promocode__code-container">

                          <copy-clipboard
                                  class="nl-promocode__btn"
                                  data-clipboard-text="{{ promocode }}"
                                  {% if popup_container != blank %}
                                      container="{{ popup_container }}"
                                  {% endif %}
                                  data-tooltip="{{ 'general.nl_promocode.copied_to_clipboard' | t }}"
                          >
                              <span class="nl-promocode__code">{{ promocode }}</span>
                          </copy-clipboard>
                      </div>
                  </div>
              {% endif %}
          {% endcase %}
        {% endcapture %}
        <div class="announcement-bar__message {{ text_size_class }}">
          {%- if block.settings.content != blank or block.settings.image != blank -%}
            {%- if block.settings.learn_more_text != blank -%}
              {{ main_message }}
              <button class="link" data-action="open-content">
                {{ block.settings.learn_more_text | escape }}
              </button>
            {%- else -%}
              <button data-action="open-content">{{ main_message }}</button>
            {%- endif -%}
          {%- elsif block.settings.text_link != blank -%}
            <a href="{{ block.settings.text_link }}">{{ main_message }}</a>
          {%- else -%}
            {{ main_message }}
          {%- endif -%}
        </div>

        {%- if block.settings.content != blank or block.settings.image != blank -%}
          <div hidden class="announcement-bar__content {% if block.settings.image != blank %}has-image{% endif %}">
            <div class="announcement-bar__content-overlay"></div>

            <div class="announcement-bar__content-overflow">
              <div class="announcement-bar__content-inner">
                <button type="button" class="announcement-bar__close-button tap-area" data-action="close-content">
                  <span class="visually-hidden">{{ 'general.accessibility.close' | t }}</span>
                  {%- render 'icon' with 'close' -%}
                </button>

                {%- if block.settings.image != blank -%}
                  {%- capture sizes_attribute -%}{% if block.settings.content != blank %}50vw{% else %}100vw{% endif %}{%- endcapture -%}
                  {{-
                  block.settings.image
                  | image_url: width: block.settings.image.width
                  | image_tag:
                  loading: 'lazy',
                  sizes: sizes_attribute,
                  widths: '400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000',
                  class: 'announcement-bar__content-image'
                  -}}
                {%- endif -%}

                {%- if block.settings.content != blank -%}
                  <div class="announcement-bar__content-text-wrapper">
                    <div class="announcement-bar__content-text text-container">
                      {%- if block.settings.title != blank -%}
                        <h3 class="heading h5">{{ block.settings.title | escape }}</h3>
                      {%- endif -%}

                      {%- if block.settings.content != blank -%}
                        {{- block.settings.content -}}
                      {%- endif -%}

                      {%- if block.settings.button_text != blank -%}
                        <div class="button-wrapper">
                          <a href="{{ block.settings.button_link }}" class="button button--primary">
                            {{- block.settings.button_text | escape -}}
                          </a>
                        </div>
                      {%- endif -%}
                    </div>
                  </div>
                {%- endif -%}
              </div>
            </div>
          </div>
        {%- endif -%}
      </announcement-bar-item>
    {% endunless %}
  {%- endfor -%}
{%- endcapture -%}

<style>
  :root {
      --enable-sticky-announcement-bar: {% if section.settings.announcement_bar_position == 'non_sticky' or section.settings.announcement_bar_position == 'sticky_desktop' %}0{% else %}1{% endif %};
  }

  #shopify-section-{{ section.id }} {
      --heading-color: {{ section.settings.text_color.red }}, {{ section.settings.text_color.green }}, {{ section.settings.text_color.blue }};
      --text-color: {{ section.settings.text_color.red }}, {{ section.settings.text_color.green }}, {{ section.settings.text_color.blue }};
      --primary-button-background: {{ section.settings.button_background.red }}, {{ section.settings.button_background.green }}, {{ section.settings.button_background.blue }};
      --primary-button-text-color: {{ section.settings.button_text_color.red }}, {{ section.settings.button_text_color.green }}, {{ section.settings.button_text_color.blue }};
      --section-background: {{ section.settings.background.red }}, {{ section.settings.background.green }}, {{ section.settings.background.blue }};
      --counter-background: {{ section.settings.counter_background.red }}, {{ section.settings.counter_background.green }}, {{ section.settings.counter_background.blue }};
      --counter-text-color: {{ section.settings.counter_text_color.red }}, {{ section.settings.counter_text_color.green }}, {{ section.settings.counter_text_color.blue }};


  {%- if countdowns_size > 0 -%}
      --min-height: 68px;
  {%- endif -%}
  {%- if section.settings.height != blank -%}
   --force-height: {{ section.settings.height }};
  {%- endif -%}
  {%- if section.settings.announcement_bar_position == 'sticky' or section.settings.announcement_bar_position == 'sticky_mobile' -%}
      position: -webkit-sticky;
      position: sticky;
      top: 0;
      z-index: 5; /* Make sure it goes over header */
  {%- else -%}
      position: relative;
  {%- endif -%}
  }

  @media screen and (max-width: 741px) {
      #shopify-section-{{ section.id }} {
      {%- if countdowns_size > 0 -%}
          --min-height: 88px;
      {%- endif -%}
      {%- if section.settings.height_mobile != blank -%}
       --force-height: {{ section.settings.height_mobile }};
      {%- endif -%}
      }
  }
  @media screen and (min-width: 741px) {
      :root {
          --enable-sticky-announcement-bar: {% if section.settings.announcement_bar_position == 'non_sticky' or section.settings.announcement_bar_position == 'sticky_mobile' %}0{% else %}1{% endif %};
      }

      #shopify-section-{{ section.id }} {

      {%- if countdowns_size > 0 -%}
          --min-height: 60px;
      {%- endif -%}
      {%- if section.settings.announcement_bar_position == 'sticky' or section.settings.announcement_bar_position == 'sticky_desktop' -%}
          position: -webkit-sticky;
          position: sticky;
          top: 0;
          z-index: 5; /* Make sure it goes over header */
      {%- else -%}
          position: relative;
          z-index: unset;
      {%- endif -%}
      }
  }

  {% for block in section.blocks %}
  {% if block.type == 'countdown' %}
  #shopify-section-{{ section.id }} .countdown-timer {
      --countdown-item-background-color: {{ block.settings.countdown_item_background_color.red }}, {{ block.settings.countdown_item_background_color.green }}, {{ block.settings.countdown_item_background_color.blue }};
  }
  {% endif %}
  {% endfor %}
</style>

{% if section.settings.hide_navigation and section.settings.autoplay %}
  {% assign hide_navigation = true %}
{% endif %}

{%- if components_length > 0 -%}
  {% capture section_class %}
    oz-section
    {% if section.settings.extra_css_class != blank %}
      {{ section.settings.extra_css_class | strip }}
    {% endif %}
  {% endcapture %}

  <section class="{% render 'f_format_css_class' with section_class %}">
    <announcement-bar
      {% if components_length > 1 and section.settings.autoplay %}
        auto-play cycle-speed="{{ section.settings.cycle_speed | escape }}"
      {% endif %}
      class="announcement-bar {% if components_length > 1 %}announcement-bar--multiple{% endif %}{% if hide_navigation %} announcement-bar--hide-navigation{% endif %}{% if section.settings.height != blank or section.settings.height_mobile != blank %} announcement-bar--force-height{% endif %}"
    >
      {%- if components_length > 1 and hide_navigation != true -%}
        <button data-action="prev" class="tap-area tap-area--large">
          <span class="visually-hidden">{{ 'general.accessibility.previous' | t }}</span>
          {% render 'icon' with 'nav-arrow-left-small', direction_aware: true %}
        </button>
      {%- endif -%}

      <div class="announcement-bar__list">
        {{ announcement_bar_content }}
      </div>

      {%- if components_length > 1 and hide_navigation != true -%}
        <button data-action="next" class="tap-area tap-area--large">
          <span class="visually-hidden">{{ 'general.accessibility.next' | t }}</span>
          {% render 'icon' with 'nav-arrow-right-small', direction_aware: true %}
        </button>
      {%- endif -%}
      {% if section.settings.close_announcement_bar %}
        <button type="button" class="announcement-bar__main-close-button tap-area" data-action="close-content">
          <span class="visually-hidden">{{ 'general.accessibility.close' | t }}</span>
          {%- render 'icon' with 'close' -%}
        </button>
      {% endif %}
    </announcement-bar>
  </section>

  <script>
    document.documentElement.style.setProperty(
      '--announcement-bar-height',
      document.getElementById('shopify-section-{{ section.id }}').clientHeight + 'px'
    );
  </script>
{% endif %}

{% schema %}
{
  "name": "Announcement bar",
  "class": "shopify-section--announcement-bar",
  "blocks": [
    {
      "type": "countdown",
      "name": "countdown",
      "settings": [
        {
          "type": "text",
          "id": "deadline",
          "label": "End of timer",
          "default": "2026-12-25T10:00:00",
          "info": "date format YYYY-MM-DDThh:mm:ss"
        },
        {
          "type": "checkbox",
          "id": "hide_finished",
          "label": "Hide countdown when it reaches it's deadline",
          "default": false
        },
        {
          "type": "select",
          "id": "countdown_display",
          "label": "Countdown display",
          "info": "Make sure to leave the height blank in the section settings",
          "options": [
            {
              "label": "Two Lines",
              "value": "two_lines"
            },
            {
              "label": "Single line",
              "value": "single_line"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "countdown_item_border",
          "label": "Countdown item border",
          "default": true,
          "info": "Only when countdown display is set to single line"
        },
        {
          "type": "text",
          "id": "top_title",
          "label": "Text",
          "default": "Only"
        },
        {
          "type": "text",
          "id": "bottom_title",
          "label": "Text",
          "default": "before the end of sales"
        },
        {
          "type": "text",
          "id": "end_message",
          "label": "Text",
          "default": "Sadly, the promotion is over !"
        },
        {
          "type": "text",
          "id": "learn_more_text",
          "label": "Learn more text",
          "default": "Learn more",
          "info": "Add details below to show this text."
        },
        {
          "type": "header",
          "content": "Details"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "1400 x 800px .jpg recommended (if content is set), 2400 x 800 .jpg recommended (if no content)"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "countdown_item_background_color",
          "label": "Countdown background color"
        }
      ]
    },
    {
      "type": "message_richtext",
      "name": "Message rich text",
      "settings": [
        {
          "type": "richtext",
          "id": "message_richtext",
          "label": "Message rich text"
        }
      ]
    },
    {
      "type": "message",
      "name": "Message",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Announce something here"
        },
        {
          "type": "url",
          "id": "text_link",
          "label": "Text link"
        },
        {
          "type": "text",
          "id": "learn_more_text",
          "label": "Learn more text",
          "default": "Learn more",
          "info": "Add details below to show this text."
        },
        {
          "type": "text",
          "id": "announcement_promocode",
          "label": "Promo code"
        },
        {
          "type": "header",
          "content": "Details"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "1400 x 800px .jpg recommended (if content is set), 2400 x 800 .jpg recommended (if no content)"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "close_announcement_bar",
      "label": "Close announcement bar",
      "info": "User can close announcement bar during session. Bar will be visible again at next session",
      "default": false
    },
    {
      "type": "select",
      "id": "announcement_bar_position",
      "label": "Position",
      "options": [
        {
          "value": "non_sticky",
          "label": "Non sticky"
        },
        {
          "value": "sticky_desktop",
          "label": "Sticky on desktop only"
        },
        {
          "value": "sticky_mobile",
          "label": "Sticky on mobile only"
        },
        {
          "value": "sticky",
          "label": "Sticky everywhere"
        }
      ],
      "default": "non_sticky"
    },
    {
      "type": "select",
      "id": "announcement_text_size",
      "label": "Text size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "normal",
          "label": "Normal"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "normal"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto rotate between messages",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "hide_navigation",
      "label": "Hide navigation arrows",
      "info": "Only available if auto rotate is enable",
      "default": false
    },
    {
      "type": "range",
      "id": "cycle_speed",
      "min": 3,
      "max": 20,
      "step": 1,
      "unit": "sec",
      "label": "Change message every",
      "default": 5
    },
    {
      "type": "header",
      "content": "Advanced display"
    },
    {
      "type": "text",
      "id": "height",
      "label": "Height",
      "info": "Force height for both device, make sure to leave it blank if there is a countdown"
    },
    {
      "type": "text",
      "id": "height_mobile",
      "label": "[mobile] Height",
      "info": "Override height only for mobile, make sure to leave it blank if there is a countdown"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#1e2d7d"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#1e2d7d"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "counter_background",
      "label": "Counter background",
      "default": "#1e2d7d"
    },
    {
      "type": "color",
      "id": "counter_text_color",
      "label": "Counter text",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Advanced"
    },
    {
      "type": "text",
      "id": "extra_css_class",
      "label": "Extra CSS class"
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "message"
      }
    ]
  }
}
{% endschema %}
