<style>
    {% if section.settings.show_subcollection_title_position == 'column-reverse' %}
        {% assign items_align_items = 'baseline' %}
    {% endif %}
    {% if section.settings.show_subcollection_title_position == 'column' %}
        {% assign items_align_items = 'flex-end' %}
    {% endif %}

    {% if section.settings.text_with_icon_title_position == 'row-reverse' or section.settings.text_with_icon_title_position == 'row' %}
        {% assign text_with_icon_align_items = 'baseline' %}
    {% endif %}
    {% if section.settings.text_with_icon_title_position == 'column' %}
        {% assign text_with_icon_align_items = 'flex-end' %}
    {% endif %}
    {% if section.settings.text_with_icon_title_position == 'column-reverse' %}
        {% assign text_with_icon_align_items = 'flex-start' %}
    {% endif %}
        {% assign text_with_icon_align_items = 'flex-start' %}

  #shopify-section-{{ section.id }} {
      --items-spacing: {{ section.settings.items_spacing }};
      --items-spacing-mobile: {{ section.settings.items_spacing_mobile }};
      --items-alignment: {{ section.settings.items_alignment }};
      --items-align-items: {{ items_align_items }};

      --subcollection-image-border-radius: {{ section.settings.subcollection_image_border_radius }}%;
      --subcollection-title-position: {{ section.settings.show_subcollection_title_position }};

      --text-with-icon-title-position: {{ section.settings.text_with_icon_title_position }};
      --text-with-icon-text-alignment: {{ section.settings.text_with_icon_text_alignment }};
      --text-with-icon-items-spacing: {{ section.settings.text_with_icon_items_spacing }};
      --text-with-icon-align-items: {{ text_with_icon_align_items }};
  }

    {%- for block in section.blocks -%}
        #block-{{ section.id }}-{{ block.id }} .subcollection-image__image-container svg {
            height: {{ block.settings.icon_width }}px;
            width: {{ block.settings.icon_width }}px;
        }
        #block-{{ section.id }}-{{ block.id }} .subcollection-image__image-container img {
            height: {{ block.settings.custom_icon_width }}px;
            width: {{ block.settings.custom_icon_width }}px;
        }
    {%- endfor -%}
</style>

{%- capture content -%}

    {%- liquid
        assign show_subcollection_img = section.settings.show_subcollection_img
        assign link_style = link_style

        if show_subcollection_img == false
            if section.settings.link_style == "primary"
                assign link_style = link_style | append: 'button' | append: ' ' | append: 'button--primary'
            endif
            if section.settings.link_style == "secondary"
                assign link_style = link_style | append: 'button' | append: ' ' | append: 'button--secondary'
            endif
            if section.settings.link_style == "transparent"
                assign link_style = link_style | append: 'button' | append: ' ' | append: 'button--transparent'
            endif
            if section.settings.link_style == "link"
                assign link_style = link_style | append: 'link--animated'
            endif
        endif
    -%}

    {%- if section.settings.section_collection.title != null -%}

        {% comment %} COLLECTION SECTION {% endcomment %}
        {% capture breadcrumb_subcollection %}
            {% render 'collection-breadcrumb-menu',
                collection: section.settings.section_collection,
                custom_breadcrumb_links: section.settings.breadcrumb_links %}
        {% endcapture %}

        {% assign breadcrumb_subcollection_data = breadcrumb_subcollection | split: '##' %}
        {% assign breadcrumb_menu = breadcrumb_subcollection_data.first %}
        {% assign subcollection = breadcrumb_subcollection_data.last %}

        {% assign subcollection_data = subcollection | split: '@@' %}
        {% assign subcollection_title_data = subcollection_data.first | split: '||' %}
        {% assign subcollection_links = subcollection_data.last | strip | split: '[]' %}

    {% else %}

        {% comment %} COLLECTION BLOCKS {% endcomment %}

        {% liquid
            assign sub_collection_blocks = section.blocks | where: 'type', 'sub-collection'
            for block in section.blocks
                assign block_collection = block.settings.collection
                if block_collection
                    assign sub_img_url = ' '
                    assign block_title = block.settings.title | default: block_collection.title
                    assign metafield_title = section.settings.metafield_title | split: '.'
                    assign metafield_key = block_collection.metafields[metafield_title[0]][metafield_title[1]].value
                    assign block_image = block.settings.image | default: metafield_key | default: block_collection.image
                    if block_image
                        assign sub_img_url = block_image | image_url: height: 300 | image_tag
                    endif
                    assign subcollection = subcollection | append: block_title | append: '||' | append: block_collection.url | append: '||' | append: sub_img_url
                    assign subcollection = subcollection | append: '[]'
                endif
            endfor
        %}

        {% assign subcollection_links = subcollection | strip | split: '[]' %}

    {% endif %}

    {% if sub_collection_blocks.size > 0 or section.settings.section_collection.title != blank %}
        {% render 'f_linkbar',
                subcollection_links: subcollection_links,
                link_style: link_style,
                subcollection_title_data: subcollection_title_data
        %}
    {% endif %}

    {% comment %} TEXT WITH ICON BLOCKS {% endcomment %}

    {% liquid
        assign text_with_icon_blocks = section.blocks | where: 'type', 'text-with-icon'
    %}

    {% if text_with_icon_blocks.size > 0 %}
        {% render 'f_text-with-icon', text_with_icon_blocks: text_with_icon_blocks %}
    {% endif %}

{%- endcapture -%}

{% render 'section-layout', content: content, module: 'sub-collection-list' %}
