{% comment %}start by getting global collection static items{% endcomment %}
{% liquid
  assign active_filters_count = active_filters_count | default: 0

  for global_item in global_items
    assign found = global_item.collections.value | where: 'handle', collection.handle
    if global_item.collections == blank or found != blank
      for global_static_item in global_item.static_items.value
        if global_static_item.system.type == 'advanced_static_item' or global_static_item.system.type == 'advanced_static_product_item'
          if global_items_output != blank
            assign global_items_output = global_items_output | append: '[]'
          endif
          assign global_items_output = global_items_output | append: global_static_item.system.handle | append: '##' | append: global_static_item.system.type
        elsif global_static_item.system.type == 'advanced_static_item_override' and global_items_output != blank
          assign global_items_output = global_items_output | append: '@@' | append: global_static_item.system.handle
        endif
      endfor
    endif
  endfor

  assign global_items_arr = global_items_output | split: '[]'
%}

{% comment %}Get metafield static items{% endcomment %}
{% liquid
  for item in metafield_items
    if item.system.type == 'advanced_static_item' or item.system.type == 'advanced_static_product_item'
      if metafield_items_output != blank
        assign metafield_items_output = metafield_items_output | append: '[]'
      endif
      assign metafield_items_output = metafield_items_output | append: item.system.handle | append: '##' | append: item.system.type

      for global_item in global_items_arr
        assign global_item_handle = global_item | split: '@@' | first | split: '##' | first
        if item.system.handle == global_item_handle
          assign global_items_to_remove = global_items_to_remove | append: global_item | append: '##' | append: global_item.system.type | append: '[]'
        endif
      endfor

    elsif item.system.type == 'advanced_static_item_override' and metafield_items_output != blank
      assign metafield_items_output = metafield_items_output | append: '@@' | append: item.system.handle
    endif
  endfor

  assign metafield_items_arr = metafield_items_output | split: '[]'
%}

{% comment %}remove global duplicate{% endcomment %}
{% liquid
  assign global_items_to_remove = global_items_to_remove | split: '[]' | compact | uniq
  for global_item in global_items_arr
    assign found = global_items_to_remove | where: global_item
    if found == blank
      assign global_items_clean = global_items_clean | append: global_item | append: '[]'
    endif
  endfor
  assign global_items_clean_arr = global_items_clean | split: '[]'
%}

{% comment %}concat all items{% endcomment %}
{% assign all_items = global_items_clean_arr | concat: metafield_items_arr | compact | uniq %}

{% comment %}Apply show/hide conditions{% endcomment %}
{% assign output = '' %}
{% assign output_end = '' %}

{% for handles in all_items %}
  {% assign handles_arr = handles | split: '@@' %}
  {% assign static_item_handle_type_arr = handles_arr[0] | split: '##' %}
  {% assign static_item = null %}
  {% assign static_item = shop.metaobjects[static_item_handle_type_arr[1]][static_item_handle_type_arr[0]] %}

  {% unless static_item %}
    {% continue %}
  {% endunless %}

  {% assign static_item_override = shop.metaobjects.advanced_static_item_override[handles_arr[1]] %}
  {% assign static_item_show_when_filtered = static_item_override.show_when_filtered
    | default: static_item.show_when_filtered, allow_false: true
    | default: false
  %}
  {% assign static_item_show_when_sorted_by = static_item_override.show_when_sorted_by
    | default: static_item.show_when_sorted_by, allow_false: true
    | default: false
  %}
  {% assign static_item_position = static_item_override.position | default: static_item.position | default: 1 %}

  {% assign show_item = true %}

  {% comment %}Show only if customer tag contains a specific value{% endcomment %}
  {% liquid
    if static_item.show_only_if_customer_tag_contains != blank
      assign show_item = false
      for tag in customer.tags
        assign found_tag = static_item.show_only_if_customer_tag_contains.values | where: tag
        if found_tag
          assign show_item = true
        endif
      endfor
    endif
  %}

  {% comment %}Show only if customer is logged{% endcomment %}
  {% liquid
    if static_item.show_only_if_customer_is_logged == true
      assign show_item = false
      if customer
        assign show_item = true
      endif
    endif
  %}

  {% comment %}Hide if customer tag contains a specific value{% endcomment %}
  {% liquid
    if static_item.hide_if_customer_tag_contains != blank
      assign show_item = true
      for tag in customer.tags
        assign found_tag = static_item.hide_if_customer_tag_contains.values | where: tag
        if found_tag
          assign show_item = false
        endif
      endfor
    endif
  %}

  {% comment %}Hide if customer is logged{% endcomment %}
  {% liquid
    if static_item.hide_if_customer_is_logged == true
      assign show_item = true
      if customer
        assign show_item = false
      endif
    endif
  %}

  {% comment %}Show/hide when filtered{% endcomment %}
  {% if active_filters_count > 0 and static_item_show_when_filtered != true %}
    {% assign show_item = false %}
  {% endif %}

  {% comment %}Show/hide when sorted by{% endcomment %}
  {% if collection.sort_by != blank
    and collection.sort_by != collection.default_sort_by
    and static_item_show_when_sorted_by != true
  %}
    {% assign show_item = false %}
  {% endif %}

  {% liquid
    if show_item and static_item
      if static_item_position == 'end of collection'
        assign output_end = output_end | append: static_item.system.handle | append: '##' | append: static_item.system.type
        if static_item_override
          assign output_end = output_end | append: '@@' | append: static_item_override.system.handle
        endif
        assign output_end = output_end | append: '[]'
      elsif static_item_position == 'before end outofstock'
        assign output_end_outofstock = output_end_outofstock | append: static_item.system.handle | append: '##' | append: static_item.system.type
        if static_item_override
          assign output_end_outofstock = output_end_outofstock | append: '@@' | append: static_item_override.system.handle
        endif
        assign output_end_outofstock = output_end_outofstock | append: '[]'
      else
        assign output = output | append: static_item.system.handle | append: '##' | append: static_item.system.type
        if static_item_override
          assign output = output | append: '@@' | append: static_item_override.system.handle
        endif
        assign output = output | append: '[]'
      endif
    endif
  %}
{% endfor %}
{% assign output = output | append: '||' | append: output_end | append: '||' | append: output_end_outofstock %}
{{- output -}}
