<script>
  (() => {
    const temEvent = [];
    let isReady = false;

    function manageConsentFromShopify(cons) {
      const { marketingAllowed, analyticsAllowed, preferencesAllowed } = cons;

      const consent = {
        ad_storage: typeof marketingAllowed === 'boolean' ? (marketingAllowed ? 'granted' : 'denied') : undefined,
        analytics_storage:
          typeof analyticsAllowed === 'boolean' ? (analyticsAllowed ? 'granted' : 'denied') : undefined,
        ad_user_data: typeof marketingAllowed === 'boolean' ? (marketingAllowed ? 'granted' : 'denied') : undefined,
        ad_personalization:
          typeof preferencesAllowed === 'boolean' ? (preferencesAllowed ? 'granted' : 'denied') : undefined,
      };

      document.body.dispatchEvent(
        new CustomEvent('google-consent', {
          bubbles: true,
          detail: consent,
        })
      );
    }

    function manageConsent(event) {
      if (!isReady) {
        temEvent.push(event);
        return;
      }

      let consentMode = event.detail;
      if (!consentMode) return;

      const { analytics = false, preferences = false, marketing = false, sale_of_data = false } = consentMode;

      // GÃ¨re le consent Shopify
      if (window.Shopify?.customerPrivacy) {
        const trackingConsent = {
          analytics,
          preferences,
          marketing,
          sale_of_data,
        };

        window.Shopify.customerPrivacy.setTrackingConsent(trackingConsent, () => {
          console.log('shopify consent set to', trackingConsent);
        });
      }
    }

    window.addEventListener('DOMContentLoaded', () => {
      // consent
      window.Shopify.loadFeatures([
        {
          name: 'consent-tracking-api',
          version: '0.1',
          onLoad: () => {
            isReady = true;
            temEvent.forEach(manageConsent);

            document.dispatchEvent(
              new CustomEvent('consent:loaded', {
                bubbles: true,
              })
            );

            if (Shopify.customerPrivacy.shouldShowBanner()) {
              const { marketing, analytics, preferences } = Shopify.customerPrivacy.currentVisitorConsent();

              const consent = {
                marketingAllowed: marketing ? marketing === 'yes' : undefined,
                analyticsAllowed: analytics ? analytics === 'yes' : undefined,
                preferencesAllowed: preferences ? preferences === 'yes' : undefined,
              };

              manageConsentFromShopify(consent);

              window.dispatchEvent(
                new CustomEvent('oz-consent:ready', {
                  bubbles: true,
                  detail: {
                    provider: 'shopify',
                  },
                })
              );

              document.addEventListener('visitorConsentCollected', (event) => manageConsentFromShopify(event.detail));

              // se branche sur le lien open cookie du footer
              document.addEventListener('cookie:relaunch', () => {
                privacyBanner?.showPreferences();
              });
            }
          },
        },
      ]);
    });

    window.addEventListener('shopify:consent:change', manageConsent);
  })();
</script>
